# So many
# https://github.com/ntalekt/homeassistant/blob/87c931714767b4a3e0e867aa334e9e4a35d0ae19/sensor.yaml

##########################################################
# Ecobee
##########################################################
- platform: history_stats
  name: HVAC run time today
  entity_id: sensor.hvac_action
  state: 
    - cooling
    - heating
    - fan
  type: time
  end: '{{ now() }}'
  duration:
    hours: 24
- platform: history_stats
  name: HVAC run time today no fan
  entity_id: sensor.hvac_action
  state: heating
  type: time
  end: '{{ now() }}'
  duration:
    hours: 24
- platform: history_stats
  name: HVAC run count today
  entity_id: sensor.hvac_action
  state: 
    - cooling
    - heating
    - fan
  type: count
  end: '{{ now() }}'
  duration:
    hours: 24
- platform: history_stats
  name: HVAC run count today no fan
  entity_id: sensor.hvac_action
  state: heating
  type: count
  end: '{{ now() }}'
  duration:
    hours: 24
- platform: template
  sensors:
    current_temperature:
      friendly_name: Current Temperature
      value_template: >
        {{ state_attr('climate.living_room', 'current_temperature') }}
      unit_of_measurement: °F
    target_temperature:
      friendly_name: Target Temperature
      value_template: >
        {{ state_attr('climate.living_room', 'temperature') }}
      unit_of_measurement: °F
    hvac_action:
      friendly_name: HVAC action
      value_template: >
        {{ state_attr('climate.living_room', 'hvac_action') }}
    hvac_action_heating:
      friendly_name: HVAC action heating
      value_template: >
        {{ {"heating": "1"}[state_attr('climate.living_room', 'hvac_action')] | default("0")  }}
    hvac_action_cooling:
      friendly_name: HVAC action cooling
      value_template: >
        {{ {"cooling": "1"}[state_attr('climate.living_room', 'hvac_action')] | default("0")  }}
    hvac_action_fan:
      friendly_name: HVAC action fan
      value_template: >
        {{ {"fan": "0.5"}[state_attr('climate.living_room', 'hvac_action')] | default("0")  }}

##########################################################
# Cams
##########################################################
- platform: command_line
  command: stat -c '%Y' www/images/snapshot_cam_1.jpg
  name: Cam 1 last motion time
  scan_interval: 60

- platform: command_line
  command: stat -c '%Y' www/images/snapshot_cam_2.jpg
  name: Cam 2 last motion time
  scan_interval: 60
  
- platform: command_line
  command: stat -c '%Y' www/images/snapshot_cam_3.jpg
  name: Cam 3 last motion time
  scan_interval: 60
  
- platform: command_line
  command: stat -c '%Y' www/images/snapshot_cam_4.jpg
  name: Cam 4 last motion time
  scan_interval: 60  

##########################################################
# Home Assistant
##########################################################

- platform: command_line
  command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
  name: Current HA Release
  scan_interval: 3600

- platform: command_line
  command: /usr/local/bin/hass --version
  name: Installed HA Version
  scan_interval: 3600

- platform: sql
  db_url: !secret recorder_db_url
  queries:
    - name: HA DB Size
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 2) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: MB

- platform: command_line
  name: CPU Temp
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "C"
  value_template: '{{ value | multiply(0.001) | round(1) }}'

- platform: command_line
  name: HA Last Reboot
  command: cat /proc/uptime | awk '{printf "%0.f", $1}'
  scan_interval: 60
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}
    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {{ '%02d' % hours }}:{{ '%02d' % minutes }}

- platform: command_line
  name: HA Uptime
  command: echo "$(($(date +%s) - $(date -d "$(head -n1 /config/home-assistant.log | cut -d' ' -f-2)" +%s)))"
  scan_interval: 60
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}
    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {{ '%02d' % hours }}:{{ '%02d' % minutes }}

- platform: systemmonitor
  resources:
    - type: memory_use_percent
    - type: processor_use
    - type: disk_use_percent
      arg: /    

##########################################################
# Birthdays
##########################################################

# - platform: command_line
#   name: Birthday Countdown userthree
#   unit_of_measurement: days
#   scan_interval: 3600
#   command: "BDAY=`date -d REDACTED +%j | awk '{print $1 + 0}'`; TODAY=`date +%j | awk '{print $1 + 0}'`; DAYS=$(($BDAY - $TODAY)); echo $DAYS"

##########################################################
# Days in current month
##########################################################

- platform: command_line
  command: cal $(date +"%m %Y") | awk 'NF {DAYS = $NF}; END {print DAYS}'
  name: Days In Current Month
  scan_interval: 3600
